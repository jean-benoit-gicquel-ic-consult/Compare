<WebDesigner>
  <Context MetamodelVersion="2016-05-08" ScriptItemUID="Context1" ID="QER_PasswordWeb_Session" ContextType="SessionContext" AllowUrlNavigation="true">
    <ContextConfiguration>
      <CompilationSettings ScriptItemUID="CompilationSettings1">
        <AssemblyReference Assembly="VI.Web.ConfigBase.dll" />
        <AssemblyReference Assembly="System.Configuration.dll" />
        <TypeMember>internal void QER_PasswordWeb_Authenticate(string propName, string propValue)
{
	var collector = new VI.WebRuntime.Auth.AuthPropCollector(new VI.WebRuntime.Auth.AuthPropProvider("RoleBasedPasswordReset"), _Connection);
	collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp(DbConsts.ProductProperty, "PasswordReset"));
	collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp("User", DataContext.SessionAuthVars.SingleRow.GetValue("AccountName").String));
    collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp("ApplicationToken", System.Configuration.ConfigurationManager.ConnectionStrings[@"QER\Person\PasswordResetAuthenticator\ApplicationToken"].ConnectionString));
	collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp(propName, propValue));
    var url = _UserSession.Authenticate(collector);
	HttpContextFactory.Current.Response.Redirect(url, false);
}

internal string QER_PasswordWeb_Authenticate_String(string propName, string propValue)
{
	var collector = new VI.WebRuntime.Auth.AuthPropCollector(new VI.WebRuntime.Auth.AuthPropProvider("RoleBasedPasswordReset"), _Connection);
	collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp(DbConsts.ProductProperty, "PasswordReset"));
	collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp("User", DataContext.SessionAuthVars.SingleRow.GetValue("AccountName").String));
    collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp("ApplicationToken", System.Configuration.ConfigurationManager.ConnectionStrings[@"QER\Person\PasswordResetAuthenticator\ApplicationToken"].ConnectionString));
	collector.AdditionalProperties.Add(new VI.DB.Auth.AuthProp(propName, propValue));
    var url = _UserSession.Authenticate(collector);
	return url;
}</TypeMember>
        <ObjectInclude ObjectIncludeID="VI_Common_AccessControl" />
        <AssemblyReference Assembly="QER.CompositionApi.dll" />
      </CompilationSettings>
      <ContextParameters ScriptItemUID="ContextParameters1" />
      <ConfigSectionDefinition Name="General settings" Description="translate(&quot;#LDS#General settings&quot;)" ScriptItemUID="ConfigSectionDefinition1">
        <ConfigParam Key="VI_Common_DisplayOpenItems" Description="translate('#LDS#Show number of pending objects in menu')" LongDescription="" />
        <ConfigParam Key="VI_Common_DisplayOpenItemsUpdateInterval" Description="translate(&quot;#LDS#Update interval for notification icons (millseconds)&quot;)" Type="Text" LongDescription="" />
        <ConfigParam Key="VI_Common_DisplayEntriesPerPage" Description="translate(&quot;#LDS#Entries per page&quot;)" Type="Text" LongDescription="" />
        <ConfigParam Key="VI_Common_DisplayEmptyProperties" Description="translate('#LDS#Display properties with empty values in overview pages')" LongDescription="" />
        <ConfigParam Key="VI_Common_SqlSearch_PrefixLike" Description="translate(&quot;#LDS#Object search for partial strings contained within the data&quot;)" LongDescription="translate(&quot;#LDS#Use this property to select whether the SqlSearch function will return matches where the search string is found at any index in the data string.&quot;)" />
        <ConfigParam Key="VI_Common_MenuAlwaysExpanded" Description="translate('#LDS#Always show expanded navigation menu')" LongDescription="" />
        <ConfigParam Key="VI_Common_OnlyOneExpandedMenu" Description="translate('#LDS#Only one menu can be expanded at the same time.')" />
      </ConfigSectionDefinition>
      <ConfigSectionDefinition Name="Authentication" ScriptItemUID="ConfigSectionDefinition2" Description="translate(&quot;#LDS#Authentication&quot;)">
        <ConfigParam Key="VI_Common_RequiresAccessControl" Description="translate(&quot;#LDS#Multi-factor authentication is required after login&quot;)" LongDescription="translate(&quot;#LDS#Specify whether you want to generally enable multi-factor authentication. Before you can use certain multi-factor authentication methods, you must activate this parameter.&quot;)" />
        <ConfigParam Key="VI_Common_AccessControl_Filter" Type="SQL" DatabaseTable="Person" Description="translate(&quot;#LDS#Filter condition for identities who require multi-factor authentication&quot;)" />
        <ConfigParam Key="VI_Common_AccessControl_Webauthn_2FA" Description="translate(&quot;#LDS#Webauthn: Enable Webauthn two-factor authentication&quot;)" LongDescription="translate(&quot;#LDS#Specify whether you want to enable Webauthn two-factor authentication.&quot;)" />
        <ConfigParam Key="VI_Common_AccessControl_Webauthn_2FAID" Type="Text" Description="translate(&quot;#LDS#Webauthn: Secondary authentication provider ID&quot;)" LongDescription="translate(&quot;#LDS#Enter the ID of the secondary authentication provider for Webauthn two-factor authentication. The ID can be found in your RSTS configuration.&quot;)" />
        <ConfigParam Key="VI_Common_AccessControl_Webauthn_2FA_VisibleControls" Description="translate(&quot;#LDS#Webauthn: Manage security keys in web application&quot;)" LongDescription="translate(&quot;#LDS#Specify whether users can manage Webauthn security keys in the web application.&quot;)" />
      </ConfigSectionDefinition>
    </ContextConfiguration>
    <Tables ScriptItemUID="Tables1">
      <DataTableObjectView Table="UserRuntimeModule" ElementType="VI.WebRuntime.IUserModuleInfo, VI.WebRuntime" ScriptItemUID="DataTableObjectView1" TriggerUpdates="Never" />
      <DataTableObjectView Table="UserMenu" ElementType="VI.WebRuntime.IMenuItem, VI.WebRuntime" ScriptItemUID="DataTableObjectView3" PrimaryKeyColumn="ID" TriggerUpdates="Never">
        <ColumnProxy DataColumn="IsExpanded" Name="IsExpandedProxy" ScriptItemUID="ColumnProxy1" TriggerUpdates="Updates" />
      </DataTableObjectView>
      <DataTableObjectView Table="UserNavigation" ElementType="VI.WebRuntime.IUserNavigationInfo, VI.WebRuntime" ScriptItemUID="DataTableObjectView2" TriggerUpdates="Never" />
      <DataTableDbObject Table="User" Class="Person" WhereClauseSQL="&quot;uid_person = '&quot;+ getuser() + &quot;'&quot;" ScriptItemUID="QERDataTableDbObject1" TriggerUpdates="Never">
        <ActionSequence ScriptItemUID="QERAction1" />
        <Column Name="CountUpdate" DataType="System.Int32" ScriptItemUID="QERColumn1" />
      </DataTableDbObject>
      <DataTableSingleRow ScriptItemUID="DataTableSingleRow1" Table="SessionAuthVars">
        <Column DataType="System.Int32" Name="Method" ScriptItemUID="Column1" />
        <Column DataType="System.String" Name="Passcode" ScriptItemUID="Column3" MinLength="1" Caption="translate(&quot;#LDS#Passcode&quot;)" />
        <Column DataType="System.String" Name="AccountName" ScriptItemUID="Column4" MinLength="1" Caption="translate(&quot;#LDS#Central user account&quot;)" />
        <Column DataType="System.Int32" Name="QueryAnswerRequests" ScriptItemUID="Column7" />
        <Column DataType="System.String" Name="Answer" ScriptItemUID="Column2" MinLength="1" Caption="translate(&quot;#LDS#Answer&quot;)" />
        <Column DataType="System.Boolean" Name="MultiplePersons" ScriptItemUID="Column16" MaxLength="" MinLength="" />
      </DataTableSingleRow>
      <DataTableSQL Table="PasswordQueryAndAnswer" ScriptItemUID="DataTableSQL1" PrimaryKeyColumn="UID_QERPasswordQueryAndAnswer">
        <ActionSequence ScriptItemUID="Action10" />
        <Column DataType="System.String" Name="PasswordQuery" ScriptItemUID="Column8" Caption="translate('#LDS#Secret question')" />
        <Column DataType="System.String" Name="UID_QERPasswordQueryAndAnswer" ScriptItemUID="Column9" />
        <Column DataType="System.Int32" Name="SortOrder" ScriptItemUID="Column5" />
        <Column DataType="System.String" Name="Answer" ScriptItemUID="Column10" MinLength="1" Caption="translate('#LDS#Secret answer')" />
      </DataTableSQL>
      <DataTableSQL Table="AllPasswordQueryAndAnswer" ScriptItemUID="DataTableSQL2" PrimaryKeyColumn="UID_QERPasswordQueryAndAnswer">
        <ActionSequence ScriptItemUID="Action11" />
        <Column DataType="System.String" Name="UID_QERPasswordQueryAndAnswer" ScriptItemUID="Column13" />
        <Column DataType="System.String" Name="UID_Person" ScriptItemUID="Column11" />
      </DataTableSQL>
    </Tables>
    <Controls ScriptItemUID="Controls1">
      <Control ID="UpdateOpenItems">
        <LocalControlContext ContainerType="ActionComponent" Comment="Updates the indicator numbers of open requests, attestation cases and approval cases.">
          <ActionComponent ScriptItemUID="QERAction5" />
        </LocalControlContext>
      </Control>
      <Control ID="LoadQuestions">
        <LocalControlContext ContainerType="ActionComponent">
          <ActionComponent ScriptItemUID="Action9">
            <Delete DataTable="PasswordQueryAndAnswer" ScriptItemUID="Delete2" />
            <CodeLiteral ScriptItemUID="CodeLiteral2">var conn = new VI.WebRuntime.ServiceConnection(VI.WebRuntime.IoC.UnitySingleton.Container.Resolve&lt;IConfigDocument&gt;()).Get();
VI.WebRuntime.IDataColumn QueryAnswerRequests = this.SessionAuthVars.GetColumn("QueryAnswerRequests");
VI.WebRuntime.LoadTableOptions _loadOptions = new VI.WebRuntime.LoadTableOptions();
_loadOptions.RevertExisting = true; 
// How many questions to load
_loadOptions.PageSize = QueryAnswerRequests.GetValue(this.SessionAuthVars.SingleRow).Int;
// Accountname
VI.WebRuntime.IDataColumn _AccountName1 = this.SessionAuthVars.GetColumn("AccountName");
((VI.WebRuntime.IDataSourceTable&lt;System.Data.IDataReader&gt;)(this.PasswordQueryAndAnswer)).Load(conn.Session.GetLimitedSqlDataReader(
	this.getLimitedSqlAsString(),
	new VI.DB.Entities.QueryParameter[] {
		VI.DB.Entities.QueryParameter.Create&lt;string&gt;("CentralAccount", _AccountName1.GetValue(this.SessionAuthVars.SingleRow).String)
	}
),_loadOptions);</CodeLiteral>
          </ActionComponent>
        </LocalControlContext>
      </Control>
      <Control ID="ReLoadQuestions">
        <LocalControlContext ContainerType="ActionComponent">
          <ActionComponent ScriptItemUID="Action8">
            <CodeLiteral ScriptItemUID="CodeLiteral3">this.loadAllQuestions();</CodeLiteral>
            <ActionSequence ScriptItemUID="Action12" Condition="(from PasswordQueryAndAnswer select Count()) &gt; (from PasswordQueryAndAnswer select Count() where UID_QERPasswordQueryAndAnswer in(from AllPasswordQueryAndAnswer select UID_QERPasswordQueryAndAnswer))">
              <CallAction ScriptItemUID="Call2" ActionID="LoadQuestions" />
            </ActionSequence>
          </ActionComponent>
        </LocalControlContext>
      </Control>
    </Controls>
    <Functions ScriptItemUID="Functions1">
      <Function Name="listselect(object tablename, bound(tablename) string columnname)" Expression="isnullorempty( concat( select distinct &quot;'&quot;+columnname+&quot;'&quot; from tablename, ', ' ), &quot;''&quot;)" DataType="System.String" ScriptItemUID="Function1" />
      <Function Name="listselect(object tablename, bound(tablename) string columnname, bound(tablename) bool whereclause, string delimiter)" Expression="isnullorempty( concat( select distinct delimiter+columnname+delimiter from tablename where whereclause, ', ' ), (delimiter+delimiter))" DataType="System.String" ScriptItemUID="Function3" />
      <Function Name="listselect(object tablename, bound(tablename) string columnname, bound(tablename) bool whereclause)" Expression="isnullorempty( concat( select distinct &quot;'&quot;+columnname+&quot;'&quot; from tablename where whereclause, ', ' ), &quot;''&quot;)" DataType="System.String" ScriptItemUID="Function2" />
      <Function Name="listselect(object tablename, bound(tablename) string columnname, bound(tablename) bool whereclause, string delimiter, string seperator)" Expression="isnullorempty( concat( select distinct delimiter+columnname+delimiter from tablename where whereclause, seperator ), (delimiter+delimiter) )" DataType="System.String" ScriptItemUID="Function4" />
      <Function ScriptItemUID="Function5" Name="CanAnswerPasswordQuery()" DataType="System.Boolean" Expression="0 &lt; (from PasswordQueryAndAnswer select Count())&#xD;&#xA;and&#xD;&#xA;(from SessionAuthVars select QueryAnswerRequests) &lt;= (from PasswordQueryAndAnswer select Count())" />
      <Function ScriptItemUID="Function6" Name="getLimitedSqlAsString()" DataType="System.String" Expression="{{&#xD;&#xA;var conn = new VI.WebRuntime.ServiceConnection(VI.WebRuntime.IoC.UnitySingleton.Container.Resolve&lt;IConfigDocument&gt;()).Get();&#xD;&#xA;string SearchTable = conn.GetConfigParm(@&quot;QER\Person\PasswordResetAuthenticator\SearchTable&quot;);&#xD;&#xA;string SearchColumn = conn.GetConfigParm(@&quot;QER\Person\PasswordResetAuthenticator\SearchColumn&quot;);&#xD;&#xA;string QBMLimitedSQL = &quot;&quot;;&#xD;&#xA;if(String.IsNullOrEmpty(SearchTable) || String.IsNullOrEmpty(SearchColumn)){&#xD;&#xA;   QBMLimitedSQL = &quot;QER_Person_GetPasswordQuery&quot;;&#xD;&#xA;}&#xD;&#xA;else{&#xD;&#xA;   QBMLimitedSQL = &quot;QER_MultiTable_GetPasswordQuery&quot;;&#xD;&#xA;}&#xD;&#xA;@return QBMLimitedSQL;&#xD;&#xA;}}" />
      <Function ScriptItemUID="Function7" Name="checkForMultiplePersons()" DataType="System.Int32" Expression="{{&#xD;&#xA;this.loadAllQuestions();&#xD;&#xA;VI.WebRuntime.IDataColumn UID_Person = this.AllPasswordQueryAndAnswer.GetColumn(&quot;UID_Person&quot;);&#xD;&#xA;int count =  this.AllPasswordQueryAndAnswer.Select(row =&gt; UID_Person.GetValue(row).String).Distinct().Count();&#xD;&#xA;&#xD;&#xA;@return count;&#xD;&#xA;}}" />
      <Function ScriptItemUID="Function8" Name="loadAllQuestions()" DataType="System.Boolean" Expression="{{&#xD;&#xA;this.AllPasswordQueryAndAnswer.Delete();&#xD;&#xA;var conn = new VI.WebRuntime.ServiceConnection(VI.WebRuntime.IoC.UnitySingleton.Container.Resolve&lt;IConfigDocument&gt;()).Get();&#xD;&#xA;VI.WebRuntime.LoadTableOptions _loadOptions = new VI.WebRuntime.LoadTableOptions();&#xD;&#xA;_loadOptions.RevertExisting = true;&#xD;&#xA;VI.WebRuntime.IDataColumn _AccountName1 = this.SessionAuthVars.GetColumn(&quot;AccountName&quot;);&#xD;&#xA;((VI.WebRuntime.IDataSourceTable&lt;System.Data.IDataReader&gt;)(this.AllPasswordQueryAndAnswer)).Load(conn.Session.GetLimitedSqlDataReader(&#xD;&#xA;	this.getLimitedSqlAsString(),&#xD;&#xA;	new VI.DB.Entities.QueryParameter[] {&#xD;&#xA;		VI.DB.Entities.QueryParameter.Create&lt;string&gt;(&quot;CentralAccount&quot;, _AccountName1.GetValue(this.SessionAuthVars.SingleRow).String)&#xD;&#xA;	}&#xD;&#xA;),_loadOptions);&#xD;&#xA;@return true;&#xD;&#xA;}}" />
    </Functions>
    <DataEventHandlers ScriptItemUID="DataEventHandlers1" />
    <LoginAction ScriptItemUID="Action4">
      <LoadTable DataTable="User" ScriptItemUID="QERLoadTable2">
        <DbObjectLoadType ScriptItemUID="QERDbObjectLoadType2" />
        <FillTableDisplayColumn DataColumn="UID_DialogCulture" />
        <FillTableDisplayColumn DataColumn="UID_DialogCultureFormat" />
      </LoadTable>
      <CodeLiteral ScriptItemUID="QERCodeSetCulture">// Handling of the user's preferred culture

var theUser = User.Rows.FirstOrDefault();
if (theUser != null)
{
	await QER.CompositionApi.Person.SetSessionCulture.SetCultureFromPersonAsync(((IDbObjectRow)theUser).Entity, new SessionStateAdapter(_Database)).ConfigureAwait(false);
}
</CodeLiteral>
    </LoginAction>
    <ActionSequence ScriptItemUID="Action1">
      <CodeLiteral ScriptItemUID="CodeLiteral1">var conn = new VI.WebRuntime.ServiceConnection(VI.WebRuntime.IoC.UnitySingleton.Container.Resolve&lt;IConfigDocument&gt;()).Get();
VI.WebRuntime.IDataColumn QueryAnswerRequests = this.SessionAuthVars.GetColumn("QueryAnswerRequests");
var _tempVar = conn.GetConfigParm(@"QER\Person\PasswordResetAuthenticator\QueryAnswerRequests");
try{
	QueryAnswerRequests.SetValue(this.SessionAuthVars.SingleRow,_tempVar);
}
catch{
	QueryAnswerRequests.SetValue(this.SessionAuthVars.SingleRow,0);
}</CodeLiteral>
    </ActionSequence>
    <Forms ScriptItemUID="Forms1">
      <Form ScriptItemUID="Form2" ID="FMethod" PageFileName="QER_PasswordWeb_FormTemplate">
        <ActionSequence ScriptItemUID="Action2">
          <CodeLiteral ScriptItemUID="CodeLiteral4">// A redirect from RSTS will point to this page, but needs to be handled by the AuthStandard form
var http = VI.WebRuntime.HttpContextFactory.Current;
var code = http.Request.Unvalidated["code"];
if (!string.IsNullOrEmpty(code))
{	
	Logger.Debug("Transferring OAuth code to AuthStandard form");
	var url = _Module.CreateForm(_Module.GetFormInfo("AuthStandard"),null, null).GetUrl()
	 + "&amp;code=" + code;
	http.Server.Transfer(url);
}</CodeLiteral>
        </ActionSequence>
        <PagePartContainer ScriptItemUID="PagePartContainer3" ID="Title">
          <Label ScriptItemUID="Label3" Text="translate(&quot;#LDS#Choose your authentication method&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer2" ID="Main">
          <Container ScriptItemUID="Container15" ItemUIDReference="ButtonContinue">
            <ContainerTemplate DataTable="SessionAuthVars" ScriptItemUID="ContainerTemplate4" WithoutParentContainer="true">
              <LayoutPanel ScriptItemUID="LayoutPanel4">
                <Label ScriptItemUID="Label7" Text="translate(&quot;#LDS#Authentication method&quot;)" />
                <Container ScriptItemUID="Container10">
                  <Container ScriptItemUID="Container8">
                    <RadioButton DataTable="SessionAuthVars" ScriptItemUID="RadioButton1" DataColumn="Method" DataValue="0" Text="translate(&quot;#LDS#Authenticate with a temporary passcode.&quot;)" />
                  </Container>
                  <Container ScriptItemUID="Container7" Condition="{{@return (0 &lt; _UserSession.SessionModule.TableStore.GetTable(&quot;SessionAuthVars&quot;).Rows.FirstOrDefault().GetValue(&quot;QueryAnswerRequests&quot;).Int);}}">
                    <RadioButton DataTable="SessionAuthVars" ScriptItemUID="RadioButton2" DataColumn="Method" DataValue="1" Text="translate(&quot;#LDS#Authenticate by answering your private password questions&quot;)" />
                  </Container>
                  <Container ScriptItemUID="Container1">
                    <RadioButton DataTable="SessionAuthVars" ScriptItemUID="RadioButton3" DataColumn="Method" DataValue="2" Text="translate(&quot;#LDS#Authenticate with your current password&quot;)" />
                  </Container>
                </Container>
              </LayoutPanel>
              <ControlReferenceContainer ID="VI_Common_PropertyEditor" ScriptItemUID="QERControlRef2">
                <VirtualFunctionMapping ScriptItemUID="QERVirtualFunctionMapping1" ID="PropertyList()" IsPropertyList="true">
                  <ColumnList ScriptItemUID="QERColumnList1">
                    <SingleColumn ScriptItemUID="QERSingleColumn1" DataColumn="AccountName" Caption="translate(&quot;#LDS#User name&quot;)" Description="translate(&quot;#LDS#Central user account&quot;)" />
                  </ColumnList>
                </VirtualFunctionMapping>
                <VirtualTableMapping ScriptItemUID="QERVirtualTableMapping2" VirtualTable="EditTable" DataTable="SessionAuthVars" />
              </ControlReferenceContainer>
            </ContainerTemplate>
            <Container ScriptItemUID="Container5" Layout="'VI_Styles_Container_ButtonBar'">
              <Button ScriptItemUID="Button2" Text="translate(&quot;#LDS#Next&quot;)" ItemUID="ButtonContinue">
                <ServerActionCall ScriptItemUID="ServerActionCall2">
                  <ActionOnControl ActionType="PerformValidation" />
                  <SwitchAction ScriptItemUID="QERSwitch2">
                    <SwitchActionCase ScriptItemUID="QERCase4" Condition="1 = select count() from sessionauthvars where (method=0)">
                      <Redirect ScriptItemUID="Redirect2" AbortExecution="false" FormID="AuthByPasscode" />
                    </SwitchActionCase>
                    <SwitchActionCase ScriptItemUID="Case1" Condition="1 = select count() from sessionauthvars where (method=2)">
                      <Redirect ScriptItemUID="Redirect1" AbortExecution="false" FormID="AuthStandard" />
                    </SwitchActionCase>
                    <SwitchActionCase ScriptItemUID="QERCase5">
                      <Redirect ScriptItemUID="Redirect3" AbortExecution="false" FormID="AuthByQuestion" />
                    </SwitchActionCase>
                  </SwitchAction>
                </ServerActionCall>
              </Button>
            </Container>
          </Container>
        </PagePartContainer>
      </Form>
      <Form ScriptItemUID="Form4" ID="AuthByPasscode">
        <ActionSequence ScriptItemUID="Action5" />
        <PagePartContainer ScriptItemUID="PagePartContainer5" ID="Title">
          <Label ScriptItemUID="Label2" Text="translate(&quot;#LDS#Enter your passcode&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer6" ID="Main">
          <Container ScriptItemUID="Container4">
            <ContainerTemplate DataTable="SessionAuthVars" ScriptItemUID="ContainerTemplate2">
              <ControlReferenceContainer ID="VI_Common_PropertyEditor" ScriptItemUID="QERControlRef3">
                <VirtualFunctionMapping ScriptItemUID="QERVirtualFunctionMapping2" ID="PropertyList()" IsPropertyList="true">
                  <ColumnList ScriptItemUID="QERColumnList2">
                    <SingleColumn ScriptItemUID="QERSingleColumn2" DataColumn="Passcode" ColumnComponentEdit="VI_Edit_Password" />
                  </ColumnList>
                </VirtualFunctionMapping>
                <VirtualTableMapping ScriptItemUID="QERVirtualTableMapping3" VirtualTable="EditTable" DataTable="SessionAuthVars" />
              </ControlReferenceContainer>
            </ContainerTemplate>
            <LayoutPanel ScriptItemUID="QERLayoutPanel2">
              <Label ScriptItemUID="Label1" Text="translate(&quot;#LDS#Enter the security code&quot;)" />
              <Container ScriptItemUID="Container2">
                <Captcha ScriptItemUID="Captcha1" />
              </Container>
            </LayoutPanel>
            <Container ScriptItemUID="Container6" Layout="'VI_Styles_Container_ButtonBar'">
              <Button ScriptItemUID="QERButton1" Text="translate(&quot;#LDS#Back&quot;)" Layout="'VI_Styles_Button_Default'">
                <ServerActionCall ScriptItemUID="QERServerActionCall1">
                  <Redirect ScriptItemUID="QERRedirect1" FormID="FMethod" AbortExecution="false" />
                </ServerActionCall>
              </Button>
              <Button ScriptItemUID="Button3" Text="translate(&quot;#LDS#Next&quot;)">
                <ServerActionCall ScriptItemUID="ServerActionCall3">
                  <ActionOnControl ActionType="PerformValidation" />
                  <CodeLiteral ScriptItemUID="QERCodeLiteral1">DataContext.QER_PasswordWeb_Authenticate("PassCode", DataContext.SessionAuthVars.SingleRow.GetValue("PassCode").String);</CodeLiteral>
                </ServerActionCall>
              </Button>
            </Container>
          </Container>
        </PagePartContainer>
      </Form>
      <Form ScriptItemUID="Form5" ID="AuthByQuestion">
        <ActionSequence ScriptItemUID="Action6" />
        <PagePartContainer ScriptItemUID="PagePartContainer8" ID="Title">
          <Label ScriptItemUID="Label5" Text="translate(&quot;#LDS#Answer your password questions&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer9" ID="Main">
          <Container ScriptItemUID="Container9">
            <Activator ScriptItemUID="QERActivator1" ExecuteAlways="true">
              <Action ScriptItemUID="Action3">
                <CodeLiteral ScriptItemUID="CodeLiteral5">VI.WebRuntime.IDataColumn MultiplePersons = DataContext.SessionAuthVars.GetColumn("MultiplePersons");
if(1 &lt; DataContext.checkForMultiplePersons()){
	MultiplePersons.SetValue(DataContext.SessionAuthVars.SingleRow,true);
}
else{
	MultiplePersons.SetValue(DataContext.SessionAuthVars.SingleRow,false);
}</CodeLiteral>
                <ActionSequence ScriptItemUID="Action13" Condition="not(from SessionAuthVars select MultiplePersons)">
                  <CallAction ScriptItemUID="Call1" ActionID="LoadQuestions" />
                </ActionSequence>
              </Action>
            </Activator>
            <Container ScriptItemUID="Container14" RefreshTriggerExpression="from PasswordQueryAndAnswer select Count()">
              <SwitchContainer ScriptItemUID="QERSwitch1">
                <SwitchContainerCase ScriptItemUID="QERCase1" Condition="CanAnswerPasswordQuery()" ItemUID="employee found, has password query">
                  <ContainerTemplate DataTable="PasswordQueryAndAnswer" ScriptItemUID="QERContainerTemplate1" WithoutParentContainer="true" OrderBy="'SortOrder'">
                    <ControlReferenceContainer ID="VI_Common_PropertyViewer" ScriptItemUID="ControlRef6">
                      <VirtualFunctionMapping ID="PropertyList()" ScriptItemUID="VirtualFunctionMapping13" IsPropertyList="true">
                        <ColumnList ScriptItemUID="ColumnList3">
                          <SingleColumn ScriptItemUID="SingleColumn2" DataColumn="PasswordQuery" Caption="translate('#LDS#Secret question')" Description="translate('#LDS#Secret question')" />
                        </ColumnList>
                      </VirtualFunctionMapping>
                      <VirtualTableMapping VirtualTable="EditTable" DataTable="PasswordQueryAndAnswer" ScriptItemUID="VirtualTableMapping3" />
                    </ControlReferenceContainer>
                    <ControlReferenceContainer ID="VI_Common_PropertyEditor" ScriptItemUID="ControlRef4">
                      <VirtualFunctionMapping ID="PropertyList()" IsPropertyList="true" ScriptItemUID="VirtualFunctionMapping3">
                        <ColumnList ScriptItemUID="ColumnList1">
                          <SingleColumn ScriptItemUID="SingleColumn1" DataColumn="Answer" Caption="translate('#LDS#Secret answer')" Description="translate('#LDS#Secret answer')" ColumnComponentEdit="VI_Edit_Password" />
                        </ColumnList>
                      </VirtualFunctionMapping>
                      <VirtualTableMapping VirtualTable="EditTable" DataTable="PasswordQueryAndAnswer" ScriptItemUID="VirtualTableMapping4" />
                    </ControlReferenceContainer>
                  </ContainerTemplate>
                  <Label ScriptItemUID="Label6" Text="translate(&quot;#LDS#Enter the security code&quot;) " />
                  <Container ScriptItemUID="Container3" RefreshTriggerExpression="from PasswordQueryAndAnswer select Count()">
                    <Captcha ScriptItemUID="Captcha2" />
                  </Container>
                </SwitchContainerCase>
                <SwitchContainerCase ScriptItemUID="QERCase2" Condition="not(cananswerpasswordquery())" ItemUID="no password query set">
                  <Label ScriptItemUID="QERLabel2" EnableCustomAttributes="true" Text="translate('#LDS#You cannot log in using the secret password questions. You have not set up any or not enough password questions and answers. Log in using a different method.')">
                    <HtmlAttributes>
                      <HtmlAttribute ScriptItemUID="QERHtmlAttribute2" Name="&quot;class&quot;" Value="&quot;imx-message imx-message-exception&quot;" />
                      <Property Name="TagName" Value="div" />
                    </HtmlAttributes>
                  </Label>
                </SwitchContainerCase>
                <SwitchContainerCase ScriptItemUID="QERCase3" ItemUID="no person">
                  <Label ScriptItemUID="QERLabel1" EnableCustomAttributes="true" Text="translate(&quot;#LDS#You have entered an invalid account name.&quot;)">
                    <HtmlAttributes>
                      <HtmlAttribute ScriptItemUID="QERHtmlAttribute1" Name="&quot;class&quot;" Value="&quot;imx-message imx-message-exception&quot;" />
                      <Property Name="TagName" Value="div" />
                    </HtmlAttributes>
                  </Label>
                </SwitchContainerCase>
              </SwitchContainer>
            </Container>
            <Container ScriptItemUID="Container11" Layout="'VI_Styles_Container_ButtonBar'">
              <Button ScriptItemUID="QERButton2" Text="translate(&quot;#LDS#Back&quot;)" Layout="'VI_Styles_Button_Default'">
                <ServerActionCall ScriptItemUID="QERServerActionCall2">
                  <Redirect ScriptItemUID="QERRedirect2" FormID="FMethod" AbortExecution="false" />
                </ServerActionCall>
              </Button>
              <Button ScriptItemUID="Button4" Text="translate(&quot;#LDS#Next&quot;)" EnabledCondition="CanAnswerPasswordQuery()">
                <ServerActionCall ScriptItemUID="ServerActionCall4">
                  <ActionOnControl ActionType="PerformValidation" />
                  <Update DataColumn="Answer" DataTable="SessionAuthVars" ScriptItemUID="Update4" Value="concat(select distinct + UID_QERPasswordQueryAndAnswer + &quot;|&quot; + Answer from PasswordQueryAndAnswer, '|')" />
                  <CodeLiteral ScriptItemUID="QERCodeLiteral2">try{
	var url = DataContext.QER_PasswordWeb_Authenticate_String("PasswordAnswer", DataContext.SessionAuthVars.First().GetValue("Answer").String);
	HttpContextFactory.Current.Response.Redirect(url, false);
}
catch (Exception exc)
{
	this.DataContext.ReLoadQuestions();
	throw exc;
}</CodeLiteral>
                </ServerActionCall>
              </Button>
            </Container>
          </Container>
        </PagePartContainer>
      </Form>
      <Form ScriptItemUID="Form1" ID="AuthStandard">
        <ActionSequence ScriptItemUID="Action7" />
        <PagePartContainer ScriptItemUID="PagePartContainer1" ID="Title">
          <Label ScriptItemUID="Label4" Text="translate(&quot;#LDS#Authenticate with your current password&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer4" ID="Main">
          <Container ScriptItemUID="Container12" EnableCustomAttributes="true">
            <HtmlAttributes>
              <HtmlAttribute ScriptItemUID="HtmlAttribute1" Name="&quot;class&quot;" Value="&quot;imx-passwordreset-login&quot;" />
            </HtmlAttributes>
            <ControlReferenceContainer ID="VI_Common_Login" ScriptItemUID="ControlRef1">
              <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping1" ID="IsEmbedded()" Value="true" />
              <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping2" ID="UserName()" Value="{{&#xD;&#xA;var vars = _UserSession.SessionModule.TableStore.GetTable(&quot;SessionAuthVars&quot;);&#xD;&#xA;@return vars.GetColumn(&quot;AccountName&quot;).GetValue(vars.First());&#xD;&#xA;}}" />
              <VirtualControlMapping ContainerType="ControlList" VirtualControl="AdditionalControls">
                <ControlList ScriptItemUID="ControlList1">
                  <Label ScriptItemUID="Label8" Text="translate(&quot;#LDS#Enter the security code&quot;)" EnableCustomAttributes="true">
                    <HtmlAttributes>
                      <Property Name="TagName" Value="p" />
                    </HtmlAttributes>
                  </Label>
                  <Container ScriptItemUID="Container13">
                    <Captcha ScriptItemUID="Captcha3" />
                  </Container>
                </ControlList>
              </VirtualControlMapping>
            </ControlReferenceContainer>
          </Container>
        </PagePartContainer>
      </Form>
    </Forms>
  </Context>
</WebDesigner>
