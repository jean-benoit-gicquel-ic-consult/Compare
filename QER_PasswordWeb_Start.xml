<WebDesigner>
  <Context MetamodelVersion="2016-05-08" ScriptItemUID="Context1" ID="QER_PasswordWeb_Start" AllowUrlNavigation="true">
    <ContextConfiguration>
      <CompilationSettings ScriptItemUID="CompilationSettings1">
        <AssemblyReference Assembly="QBM.CompositionApi.dll" />
        <TypeMember>internal async System.Threading.Tasks.Task&lt;bool&gt; ValidateAsync(VI.DB.Passwords.PasswordPolicy p, System.Security.SecureString newPass)
{
	var policyName = p.Display.Translated;
	Logger.Debug("Checking new password against policy: " + policyName);
	var result = await p.ValidatePasswordAsync(newPass).ConfigureAwait(false);
	if (!result.IsValid)
	{
		var errorMessage = string.Concat(result.ValidationErrors.Select(d =&gt; "&lt;li&gt;"+System.Web.HttpUtility.HtmlEncode(d)+"&lt;/li&gt;"));
		var v = new ColumnInsertValues(DataContext.ValidationResult);
		v["ErrorMessage"] = errorMessage;
		v["PolicyName"] = policyName;
	   	DataContext.ValidationResult.Insert(v);
	}
	
	return result.IsValid;
}</TypeMember>
      </CompilationSettings>
      <ContextParameters ScriptItemUID="ContextParameters1" />
    </ContextConfiguration>
    <Tables ScriptItemUID="Tables1">
      <DataTableDbObject ScriptItemUID="DataTableDbObject1" Table="Person" Class="Person">
        <ActionSequence ScriptItemUID="Action3" />
      </DataTableDbObject>
      <DataTableCustom Table="AccountType" ScriptItemUID="DataTableCustom1">
        <Column DataType="System.String" Name="ID" ScriptItemUID="Column2" DisplayValueExpression="if(ID=&quot;Personal&quot;) then&#xD;&#xA;translate(&quot;#LDS#Personal accounts&quot;)&#xD;&#xA;else&#xD;&#xA;translate(&quot;#LDS#Other accounts&quot;)" Caption="translate(&quot;#LDS#Accounts&quot;)" />
        <Column DataType="System.Boolean" Name="Dummy" ScriptItemUID="Column4" />
        <Column DataType="System.Int32" Name="OrderNumber" ScriptItemUID="Column13" />
      </DataTableCustom>
      <DataTableObjectView Table="PasswordItem" ScriptItemUID="DataTableObjectView1" ElementType="QBM.CompositionApi.Password.IPasswordItem, QBM.CompositionApi" DisplayColumn="Display">
        <Column DataType="System.Boolean" Name="IsForReset" ScriptItemUID="Column5" />
      </DataTableObjectView>
      <DataTableSingleRow ScriptItemUID="DataTableSingleRow1" Table="Vars">
        <Column DataType="System.String" Name="Password" ScriptItemUID="Column6" Caption="translate(&quot;#LDS#New password&quot;)" MinLength="1" />
        <Column DataType="System.String" Name="PasswordRepeat" ScriptItemUID="Column7" Caption="translate(&quot;#LDS#Repeat the password&quot;)" MinLength="1" />
        <Column DataType="System.Boolean" Name="HasCentralPassword" ScriptItemUID="Column19" DataSource="Expression" Expression="0 &lt; select count() from passworditem where IsCentralPassword" />
        <Column DataType="System.Int32" Name="IsSetCentralPassword" ScriptItemUID="Column20" TriggerUpdates="Updates" />
      </DataTableSingleRow>
      <DataTableCustom Table="ValidationResult" ScriptItemUID="DataTableCustom2">
        <Column DataType="System.String" Name="PolicyName" ScriptItemUID="Column9" />
        <Column DataType="System.String" Name="ErrorMessage" ScriptItemUID="Column10" />
      </DataTableCustom>
      <DataTableCustom Table="PolicyInfo" ScriptItemUID="DataTableCustom3">
        <Column DataType="System.String" Name="PolicyName" ScriptItemUID="Column11" />
        <Column DataType="System.String" Name="DescriptionHtml" ScriptItemUID="Column12" />
      </DataTableCustom>
      <DataTableView Table="ValidationResultDistinct" ScriptItemUID="DataTableView1" ViewExpression="select distinct (policyname, errormessage) from validationresult" PrimaryKeyColumn="pk">
        <Column DataType="System.String" Name="PolicyName" ScriptItemUID="Column16" />
        <Column DataType="System.String" Name="ErrorMessage" ScriptItemUID="Column17" />
        <Column DataType="System.String" Name="pk" ScriptItemUID="Column18" />
      </DataTableView>
    </Tables>
    <Controls ScriptItemUID="Controls1" />
    <Functions ScriptItemUID="Functions1" />
    <DataEventHandlers ScriptItemUID="DataEventHandlers1">
      <DataEventHandler DataTable="Vars" ScriptItemUID="DataEventHandler1" Operation="Update">
        <ActionSequence ScriptItemUID="Action10">
          <SwitchAction ScriptItemUID="Switch1">
            <SwitchActionCase ScriptItemUID="Case1" Condition="from vars select issetcentralpassword=1" ItemUID="is setting central password">
              <Update DataColumn="IsForReset" DataTable="PasswordItem" ScriptItemUID="Update1" Value="IsCentralPassword" />
            </SwitchActionCase>
            <SwitchActionCase ScriptItemUID="Case2">
              <Update DataColumn="IsForReset" DataTable="PasswordItem" ScriptItemUID="Update2" Value="false" />
            </SwitchActionCase>
          </SwitchAction>
        </ActionSequence>
        <DataEventHandlerColumn DataColumn="IsSetCentralPassword" />
      </DataEventHandler>
    </DataEventHandlers>
    <ActionSequence ScriptItemUID="Action1">
      <LoadTable DataTable="Person" ScriptItemUID="LoadTable1" WhereClause="sqlcompareuid(&quot;uid_person&quot;, getuser())">
        <DbObjectLoadType ScriptItemUID="DbObjectLoadType1" ConvertToInteractive="false" />
      </LoadTable>
      <Insert ScriptItemUID="Insert1" DataTable="AccountType">
        <ActionSequence ScriptItemUID="Action4" />
        <InsertValue DataColumn="ID" Value="&quot;Personal&quot;" />
        <InsertValue Value="0" DataColumn="OrderNumber" />
      </Insert>
      <Insert ScriptItemUID="Insert2" DataTable="AccountType">
        <ActionSequence ScriptItemUID="Action5" />
        <InsertValue DataColumn="ID" Value="&quot;Other&quot;" />
        <InsertValue Value="1" DataColumn="OrderNumber" />
      </Insert>
      <CodeLiteral ScriptItemUID="CodeLiteral1">var collector = new QBM.CompositionApi.Password.PasswordItemCollector(_Database);
var items = await collector.GetPasswordItemsAsync(ct).ConfigureAwait(false);
PasswordItem.ObjectList.Clear();
foreach (var item in items)
{
	PasswordItem.ObjectList.Add(item);
}</CodeLiteral>
    </ActionSequence>
    <Forms ScriptItemUID="Forms1">
      <Form ScriptItemUID="Form1" ID="Start">
        <ActionSequence ScriptItemUID="Action2" />
        <PagePartContainer ScriptItemUID="PagePartContainer2" ID="Title">
          <Label ScriptItemUID="Label1" Text="translate(&quot;#LDS#Manage my passwords&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer3" ID="TitleBar">
          <ControlList ScriptItemUID="ControlList1">
            <Container ScriptItemUID="Container24" RefreshTriggerExpression="select issetcentralpassword from vars">
              <ControlReferenceControlList ID="VI_Common_PageDescription_Header" ScriptItemUID="ControlRef1">
                <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping1" ID="Text()" Value="if(0 = select issetcentralpassword from vars)then&#xD;&#xA;   translate(&quot;#LDS#Select the accounts for which you want to set a new password.&quot;)&#xD;&#xA;else if(1 = select issetcentralpassword from vars)then&#xD;&#xA;   translate(&quot;#LDS#The passwords for the following accounts are managed by the central password.&quot;)&#xD;&#xA;else if(2 = select issetcentralpassword from vars)then&#xD;&#xA;   translate('#LDS#If you forget your password, you must answer your secret questions.') + &quot; &quot; + translate('#LDS#Note that your answers are case-sensitive and that you will have to enter your answers in the same way later.')&#xD;&#xA;else if(3 = select issetcentralpassword from vars)then&#xD;&#xA;   translate('#LDS#Here you can manage your security keys.')&#xD;&#xA;&#xD;&#xA;" />
              </ControlReferenceControlList>
            </Container>
          </ControlList>
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer1" ID="Main">
          <Container ScriptItemUID="Container23" Condition="(IsNullOrEmpty(getconfig(&quot;VI_MyData_MyPassword_Visibility&quot;), &quot;true&quot;) =&quot;true&quot;)&#xD;&#xA;AND&#xD;&#xA;(&#xD;&#xA;   (try(Convert(IsNullOrEmpty(GetConfigParm(&quot;QER\Person\PasswordResetAuthenticator\QueryAnswerDefinitions&quot;),&quot;0&quot;),&quot;int32&quot;),0) &gt; DbCount(&quot;QERPasswordQueryAndAnswer&quot;,&#xD;&#xA;   SqlAnd(&#xD;&#xA;      SqlCompareUid(&quot;UID_Person&quot;,GetUser()),&#xD;&#xA;      SqlCompare(&quot;IsLocked &quot;, false, &quot;bool&quot;, &quot;equal&quot;)&#xD;&#xA;   )  &#xD;&#xA;   ))&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;">
            <Label ScriptItemUID="Label13" EnableCustomAttributes="true" Text="if Not Exists(&quot;QERPasswordQueryAndAnswer&quot;,&#xD;&#xA;SqlAnd(&#xD;&#xA;    SqlCompareUid(&quot;UID_Person&quot;,GetUser()),&#xD;&#xA;    SqlCompare(&quot;IsLocked &quot;, false, &quot;bool&quot;, &quot;equal&quot;)&#xD;&#xA;))then&#xD;&#xA;   translate('#LDS#Set your secret password answer now to unlock your account in the future.')&#xD;&#xA;else&#xD;&#xA;   translate('#LDS#Specify additional password questions to be able to unlock your account.')">
              <HtmlAttributes>
                <Property Name="TagName" Value="div" />
                <HtmlAttribute ScriptItemUID="HtmlAttribute7" Name="&quot;class&quot;" Value="&quot;imx-message&quot;" />
              </HtmlAttributes>
            </Label>
          </Container>
          <Container ScriptItemUID="Container10" EnableCustomAttributes="true">
            <HtmlAttributes>
              <HtmlAttribute ScriptItemUID="HtmlAttribute6" Name="&quot;style&quot;" Value="&quot;margin-bottom: 1em;&quot;" />
            </HtmlAttributes>
            <Container ScriptItemUID="Container14">
              <RadioButton DataTable="Vars" ScriptItemUID="RadioButton1" DataColumn="IsSetCentralPassword" DataValue="0" Text="translate(&quot;#LDS#I want to reset one or more passwords&quot;)" />
            </Container>
            <Container ScriptItemUID="Container13" Condition="from vars select HasCentralPassword">
              <RadioButton DataTable="Vars" ScriptItemUID="RadioButton2" DataColumn="IsSetCentralPassword" DataValue="1" Text="translate(&quot;#LDS#I want to reset my central password&quot;)" />
            </Container>
            <Container ScriptItemUID="Container3" Condition="getconfig(&quot;VI_MyData_MyPassword_Visibility&quot;) = &quot;true&quot;">
              <RadioButton DataTable="Vars" ScriptItemUID="RadioButton3" DataColumn="IsSetCentralPassword" DataValue="2" Text="translate(&quot;#LDS#Edit my questions and answers profile&quot;)" />
            </Container>
            <Container ScriptItemUID="Container25" Condition="&quot;true&quot; = getconfig(&quot;VI_Common_AccessControl_Webauthn_2FA_VisibleControls&quot;)&#xD;&#xA;and&#xD;&#xA;Exists(&quot;Person&quot;,Format(&quot;{0}&quot;,variable(format(IsNullOrEmpty(getconfig(&quot;VI_Employee_QERWebAuthnKey_Filter&quot;),&quot;1=1&quot;), GetUser()))))">
              <RadioButton DataTable="Vars" ScriptItemUID="RadioButton4" DataColumn="IsSetCentralPassword" DataValue="3" Text="Translate('#LDS#I want to manage my security keys')" />
            </Container>
          </Container>
          <Container ScriptItemUID="Container12" Condition="0 = select issetcentralpassword from vars" ItemUID="selecting passwords">
            <Grid ScriptItemUID="Grid1">
              <GridBand DataTable="AccountType" ScriptItemUID="GridBand1" OrderBy="'OrderNumber'" ConsolidateTables="true" EnableGridViewSetting="false" RowSelection="Multiple" DataColumnSelectState="Dummy" RowSelectionActive="false" WhereClause="ID in ( select Type from PasswordItem)">
                <GridBandListView ScriptItemUID="GridBandListView1" EnableListView="Auto" />
                <GridFilters ScriptItemUID="GridFilters1" />
                <GridRows />
                <GridColumnSimple ScriptItemUID="Column3" Column="ID" Width="&quot;65%&quot;" />
                <GridColumn ScriptItemUID="Column15" Width="&quot;35%&quot;">
                  <GridColumnHeader ScriptItemUID="wctl1">
                    <Label ScriptItemUID="Label9" Text="translate(&quot;#LDS#Type&quot;)" />
                  </GridColumnHeader>
                </GridColumn>
              </GridBand>
              <GridBand DataTable="PasswordItem" ScriptItemUID="GridBand2" DisplayHeader="Always" RowSelection="Multiple" DataColumnSelectState="IsForReset" RowSelectionActive="" EnableGridViewSetting="false" WhereClause="Type = (select current ID from AccountType) and not(IsCentralPassword)">
                <GridBandListView ScriptItemUID="GridBandListView2" EnableListView="Auto" />
                <GridFilters ScriptItemUID="GridFilters2" />
                <GridRows />
                <GridColumn ScriptItemUID="Column8" SortColumn="__Display" HasHeaderCell="false">
                  <Cell ScriptItemUID="Cell1">
                    <Label ScriptItemUID="Label3" Text="from passworditem select current display" EnableCustomAttributes="true">
                      <HtmlAttributes>
                        <HtmlAttribute ScriptItemUID="HtmlAttribute1" Name="&quot;class&quot;" Value="&quot;imx-icon imx-table-&quot;+(from passworditem select current getobjectkeytable(key))" />
                      </HtmlAttributes>
                    </Label>
                  </Cell>
                </GridColumn>
                <GridColumn ScriptItemUID="Column14" HasHeaderCell="false">
                  <Cell ScriptItemUID="Cell2">
                    <Label ScriptItemUID="Label8" Text="datacaptionsingle(&quot;&quot;+from passworditem select current getobjectkeytable(key))" />
                  </Cell>
                </GridColumn>
              </GridBand>
            </Grid>
          </Container>
          <Container ScriptItemUID="Container15" Condition="1 = select issetcentralpassword from vars" ItemUID="central password" EnableCustomAttributes="true">
            <HtmlAttributes>
              <HtmlAttribute ScriptItemUID="HtmlAttribute5" Name="&quot;class&quot;" Value="&quot;imx-message&quot;" />
            </HtmlAttributes>
            <Label ScriptItemUID="Label10" Text="translate(&quot;#LDS#The passwords for the following accounts are managed by the central password.&quot;)" EnableCustomAttributes="true">
              <HtmlAttributes>
                <Property Name="TagName" Value="div" />
              </HtmlAttributes>
            </Label>
            <Container ScriptItemUID="Container16" EnableCustomAttributes="true">
              <HtmlAttributes>
                <Property Name="TagName" Value="ul" />
              </HtmlAttributes>
              <ContainerTemplate DataTable="PasswordItem" ScriptItemUID="ContainerTemplate3" WhereClause="IsManagedCentrally" WithoutParentContainer="true">
                <Label ScriptItemUID="Label11" Text="from passworditem select current display()" EnableCustomAttributes="true">
                  <HtmlAttributes>
                    <Property Name="TagName" Value="li" />
                  </HtmlAttributes>
                </Label>
              </ContainerTemplate>
            </Container>
          </Container>
          <Container ScriptItemUID="Container21" Condition="2 = select issetcentralpassword from vars" ItemUID="change password question">
            <Label Text="translate('#LDS#Here you can specify your secret password questions.')" ScriptItemUID="Label12" EnableCustomAttributes="true">
              <HtmlAttributes>
                <Property Name="TagName" Value="div" />
                <HtmlAttribute ScriptItemUID="HtmlAttribute2" Name="&quot;class&quot;" Value="&quot;imx-message&quot;" />
              </HtmlAttributes>
            </Label>
            <ControlReferenceContainer ID="QER_PasswordQuery" ScriptItemUID="ControlRef6">
              <VirtualControlMapping ContainerType="ActionComponent" VirtualControl="AfterSaving">
                <ActionComponent ScriptItemUID="Action11">
                  <Redirect ScriptItemUID="Redirect4" FormID="Done" NoLinkBackToThisForm="true" AbortExecution="false" />
                </ActionComponent>
              </VirtualControlMapping>
              <VirtualTableMapping ScriptItemUID="VirtualTableMapping3" VirtualTable="Person" DataTable="User" />
              <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping4" ID="ButtonText()" Value="translate(&quot;#LDS#Next&quot;)" />
              <VirtualControlMapping ContainerType="Container" VirtualControl="AdditionalControls">
                <Container ScriptItemUID="Container22">
                  <Button ScriptItemUID="Button7" Text="translate(&quot;#LDS#Cancel&quot;)" Layout="'VI_Styles_Button_LabelOnly'" ItemUID="PWDWEBCancel">
                    <ServerActionCall ScriptItemUID="ServerActionCall7">
                      <Redirect ScriptItemUID="Redirect6" Target="ReturnStartForm" />
                    </ServerActionCall>
                  </Button>
                </Container>
              </VirtualControlMapping>
            </ControlReferenceContainer>
          </Container>
          <Container ScriptItemUID="Container26" Condition="3 = select issetcentralpassword from vars" ItemUID="change authentication key">
            <Label Text="Translate('#LDS#Manage your security keys.')" ScriptItemUID="Label14" EnableCustomAttributes="true">
              <HtmlAttributes>
                <Property Name="TagName" Value="div" />
                <HtmlAttribute ScriptItemUID="HtmlAttribute10" Name="&quot;class&quot;" Value="&quot;imx-message&quot;" />
              </HtmlAttributes>
            </Label>
            <ControlReferenceControlList ID="QER_WebAuthn" ScriptItemUID="ControlRef8">
              <VirtualControlMapping ContainerType="Container" VirtualControl="AdditionalControls">
                <Container ScriptItemUID="Container28">
                  <Button ScriptItemUID="Button10" Text="translate(&quot;#LDS#Cancel&quot;)" Layout="'VI_Styles_Button_LabelOnly'" ItemUID="PWDWEBCancel">
                    <ServerActionCall ScriptItemUID="ServerActionCall10">
                      <Redirect ScriptItemUID="Redirect10" Target="ReturnStartForm" />
                    </ServerActionCall>
                  </Button>
                </Container>
              </VirtualControlMapping>
              <VirtualControlMapping ContainerType="ActionComponent" VirtualControl="AfterSaving">
                <ActionComponent ScriptItemUID="Action13">
                  <Redirect ScriptItemUID="Redirect8" FormID="Done" NoLinkBackToThisForm="true" AbortExecution="false" />
                </ActionComponent>
              </VirtualControlMapping>
              <VirtualTableMapping ScriptItemUID="VirtualTableMapping5" VirtualTable="Person" DataTable="User" />
            </ControlReferenceControlList>
          </Container>
          <Validator ScriptItemUID="Validator1" DisplayType="Generic">
            <ValidationModifier Condition="((0 = select count() from passworditem where isforreset)&#xD;&#xA;and&#xD;&#xA;(2 &gt; select issetcentralpassword from vars))" ID="PasswordItemSelected" Text="translate(&quot;#LDS#No objects selected&quot;)" />
          </Validator>
          <Container ScriptItemUID="Container1" Layout="'VI_Styles_Container_ButtonBar'" Condition="2 &gt; select issetcentralpassword from vars">
            <Button ScriptItemUID="Button4" Text="translate(&quot;#LDS#Cancel&quot;)" Layout="'VI_Styles_Button_LabelOnly'">
              <ServerActionCall ScriptItemUID="ServerActionCall4">
                <Redirect ScriptItemUID="Redirect5" Target="ReturnStartForm" />
              </ServerActionCall>
            </Button>
            <Button ScriptItemUID="Button1" Text="translate(&quot;#LDS#Next&quot;)">
              <ServerActionCall ScriptItemUID="ServerActionCall1">
                <ActionOnControl ActionType="PerformValidation" />
                <Redirect ScriptItemUID="Redirect1" FormID="CheckPasswords" AbortExecution="false" />
              </ServerActionCall>
            </Button>
          </Container>
        </PagePartContainer>
      </Form>
      <Form ScriptItemUID="Form2" ID="CheckPasswords">
        <ActionSequence ScriptItemUID="Action6">
          <CodeLiteral ScriptItemUID="CodeLiteral3">var isForReset = TableStore.GetLocalColumn(DataContext.PasswordItem, "IsForReset");
var items = DataContext.PasswordItem.Where(i =&gt; isForReset.GetValue(i).Bool).ToArray();
var policies = items.Select(i =&gt; ((ObjectViewRow&lt;QBM.CompositionApi.Password.IPasswordItem&gt;) i).TargetObject.Policy).Distinct(x =&gt; x.Display.Original);

DataContext.PolicyInfo.Delete();
DataContext.ValidationResult.Delete();

foreach (var p in policies)
{
	var displays = new VI.DB.Passwords.PolicyDescriptionBuilder(p, _Database.Resolve&lt;ITranslationService&gt;())
		.GetDisplays()
	    .Select(d =&gt; "&lt;li&gt;"+System.Web.HttpUtility.HtmlEncode(d)+"&lt;/li&gt;");
	var vals = new ColumnInsertValues(DataContext.PolicyInfo);
	vals["PolicyName"] = p.Display.Translated;
	vals["DescriptionHtml"] = string.Concat(displays);
	DataContext.PolicyInfo.Insert(vals);
}</CodeLiteral>
        </ActionSequence>
        <PagePartContainer ScriptItemUID="PagePartContainer4" ID="Title">
          <Label ScriptItemUID="Label2" Text="translate(&quot;#LDS#Set a New Password&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer5" ID="Main">
          <Container ScriptItemUID="Container8" EnableCustomAttributes="true" Condition="0 &lt; select count() from validationresult">
            <HtmlAttributes>
              <HtmlAttribute ScriptItemUID="HtmlAttribute4" Name="&quot;class&quot;" Value="&quot;imx-message imx-message-warning&quot;" />
            </HtmlAttributes>
            <ContainerTemplate DataTable="ValidationResultDistinct" ScriptItemUID="ContainerTemplate2" WithoutParentContainer="true" OrderBy="'PolicyName'">
              <Label ScriptItemUID="Label7" Text="translate(&quot;#LDS#The following requirements are not met (policy: {0})&quot;, from validationresultdistinct select current policyname)" />
              <Container ScriptItemUID="Container9" EnableCustomAttributes="true">
                <HtmlAttributes>
                  <Property Name="TagName" Value="ul" />
                </HtmlAttributes>
                <Literal Expression="from validationresultdistinct select current errormessage" />
              </Container>
            </ContainerTemplate>
          </Container>
          <LayoutPanel ScriptItemUID="LayoutPanel1">
            <ControlReferenceContainer ID="VI_Edit_PropertyCaption" ScriptItemUID="ControlRef2">
              <VirtualTableMapping ScriptItemUID="VirtualTableMapping1" VirtualTable="EditTable" DataTable="Vars">
                <VirtualColumnMapping DataColumn="Password" VirtualColumn="EditColumn" />
              </VirtualTableMapping>
            </ControlReferenceContainer>
            <TextBox DataTable="Vars" DataColumn="Password" TextMode="Password" ScriptItemUID="TextBox3" />
            <Container ScriptItemUID="Container5" />
            <Container ScriptItemUID="Container6" EnableCustomAttributes="true">
              <HtmlAttributes>
                <Property Name="TagName" Value="span" />
              </HtmlAttributes>
            </Container>
            <ControlReferenceContainer ID="VI_Edit_PropertyCaption" ScriptItemUID="ControlRef3">
              <VirtualTableMapping ScriptItemUID="VirtualTableMapping2" VirtualTable="EditTable" DataTable="Vars">
                <VirtualColumnMapping DataColumn="PasswordRepeat" VirtualColumn="EditColumn" />
              </VirtualTableMapping>
            </ControlReferenceContainer>
            <TextBox DataTable="Vars" DataColumn="PasswordRepeat" TextMode="Password" ScriptItemUID="TextBox1" />
            <Container ScriptItemUID="Container17" />
            <Container ScriptItemUID="Container18">
              <Button ScriptItemUID="Button6" Text="translate(&quot;#LDS#Password requirements&quot;)" EnableCustomAttributes="true">
                <HtmlAttributes>
                  <HtmlAttribute ScriptItemUID="HtmlAttribute9" Name="&quot;class&quot;" Value="&quot;imx-button imx-mobile-fill&quot;" />
                </HtmlAttributes>
                <ServerActionCall ScriptItemUID="ServerActionCall6">
                  <CallAction ScriptItemUID="Call1" ActionID="VI_Popup">
                    <VirtualControlMapping ContainerType="Container" VirtualControl="PopupContent">
                      <Container ScriptItemUID="Container19">
                        <ContainerTemplate DataTable="PolicyInfo" ScriptItemUID="ContainerTemplate1" WithoutParentContainer="true" OrderBy="'PolicyName'">
                          <Label ScriptItemUID="Label4" Text="translate(&quot;#LDS#Your password must meet the following requirements (policy: {0})&quot;, from policyinfo select current policyname)" />
                          <Container ScriptItemUID="Container4" EnableCustomAttributes="true">
                            <HtmlAttributes>
                              <Property Name="TagName" Value="ul" />
                            </HtmlAttributes>
                            <Literal Expression="from policyinfo select current descriptionhtml" />
                          </Container>
                        </ContainerTemplate>
                      </Container>
                    </VirtualControlMapping>
                    <VirtualControlMapping ContainerType="Container" VirtualControl="PopupBottom">
                      <Container ScriptItemUID="Container20">
                        <ControlReferenceControlList ID="QBM_Common_PopupCloseButton" ScriptItemUID="ControlRef5">
                          <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping8" ID="TriggerValidation()" Value="false" />
                        </ControlReferenceControlList>
                      </Container>
                    </VirtualControlMapping>
                    <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping3" ID="PopupTitle()" Value="translate(&quot;#LDS#Password requirements&quot;)" />
                    <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping5" ID="CssClass()" Value="&quot;imx-popup-large&quot;" />
                  </CallAction>
                </ServerActionCall>
              </Button>
            </Container>
          </LayoutPanel>
          <Activator ScriptItemUID="Activator1" ExecuteAlways="true">
            <Action ScriptItemUID="Action7">
              <ExecuteJavascript ScriptItemUID="ExecuteJavascript1" Code="format(&quot;imx.ui.PasswordStrengh.create(document.getElementById('&quot; + {{ TextBox3.ClientID }} +  &quot;'),document.getElementById('&quot; + {{ Container6.ClientID }} + &quot;'));&quot;)" />
            </Action>
          </Activator>
          <Validator ScriptItemUID="Validator2" DisplayType="Generic">
            <ValidationModifier Condition="from vars select (isnullorempty(password, &quot;&quot;) &lt;&gt; isnullorempty(passwordrepeat, &quot;&quot;))" Text="translate(&quot;#LDS#The passwords do not match.&quot;)" ID="PasswordMatch" />
          </Validator>
          <Container ScriptItemUID="Container2" Layout="'VI_Styles_Container_ButtonBar'">
            <Button ScriptItemUID="Button3" Text="translate(&quot;#LDS#Back&quot;)" EnableCustomAttributes="true">
              <HtmlAttributes>
                <HtmlAttribute ScriptItemUID="HtmlAttribute8" Name="&quot;class&quot;" Value="&quot;imx-button--link&quot;" />
              </HtmlAttributes>
              <ServerActionCall ScriptItemUID="ServerActionCall3">
                <Redirect ScriptItemUID="Redirect3" AbortExecution="false" FormID="Start" />
              </ServerActionCall>
            </Button>
            <Button ScriptItemUID="Button2" Text="translate(&quot;#LDS#Next&quot;)">
              <ServerActionCall ScriptItemUID="ServerActionCall2">
                <ActionOnControl ActionType="PerformValidation" />
                <CodeLiteral ScriptItemUID="CodeLiteral2">var isValid = false;
var isForReset = TableStore.GetLocalColumn(DataContext.PasswordItem, "IsForReset");
var items = DataContext.PasswordItem.Where(i =&gt; isForReset.GetValue(i).Bool).ToArray();

using (var newPass = DataContext.Vars.SingleRow.GetValue("Password").String.ToSecure())
{
	isValid = true;

	// check each policy
	DataContext.ValidationResult.Delete();

	foreach (var item in items)
	{
		var pwdItem = ((ObjectViewRow&lt;QBM.CompositionApi.Password.IPasswordItem&gt;) item).TargetObject;
		var p = pwdItem.Policy;

		isValid &amp;= await DataContext.ValidateAsync(p, newPass).ConfigureAwait(false);
		
		if (pwdItem.IsCentralPassword &amp;&amp; _Connection.GetConfigParm(@"QER\Person\UseCentralPassword\CheckAllPolicies") == "1")
		{
			// find all other password items that are managed by the central password
			var ismgd = DataContext.PasswordItem.GetColumn("IsManagedCentrally");
			var managedCentrallyItems = DataContext.PasswordItem.Where(i =&gt; ismgd.GetValue(i).Bool).ToArray();

			Logger.Debug("Setting central password -&gt; validating against {0} additional policies", managedCentrallyItems.Length);

			foreach (var managedCentrally in managedCentrallyItems)
			{
				var cpwdItem = ((ObjectViewRow&lt;QBM.CompositionApi.Password.IPasswordItem&gt;) managedCentrally).TargetObject;
				Logger.Debug("Central password affects password {0}, will check policy", cpwdItem.Display);
				isValid &amp;= await DataContext.ValidateAsync(cpwdItem.Policy, newPass).ConfigureAwait(false);
			}
		}
	}

	if (isValid)
	{
		var collector = new QBM.CompositionApi.Password.PasswordItemCollector(_Database);
		var pwitems = items.Select(i =&gt; ((ObjectViewRow&lt;QBM.CompositionApi.Password.IPasswordItem&gt;) i).TargetObject).ToArray();
		await collector.SetPasswordsAsync(pwitems, newPass, ct).ConfigureAwait(false);
	}

}
</CodeLiteral>
                <ActionSequence ScriptItemUID="Action8" Condition="{{ isValid }}">
                  <Redirect ScriptItemUID="Redirect2" FormID="Done" NoLinkBackToThisForm="true" AbortExecution="false" />
                </ActionSequence>
              </ServerActionCall>
            </Button>
          </Container>
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer9" ID="TitleBar">
          <ControlList ScriptItemUID="ControlList2">
            <ControlReferenceControlList ID="VI_Common_PageDescription_Header" ScriptItemUID="ControlRef4">
              <VirtualFunctionMapping ScriptItemUID="VirtualFunctionMapping2" ID="Text()" Value="translate('#LDS#You are setting the password for the following account(s): {0}',&#xD;&#xA;Concat(from passworditem select display() where isforreset, &quot;, &quot;)&#xD;&#xA;)" />
            </ControlReferenceControlList>
          </ControlList>
        </PagePartContainer>
      </Form>
      <Form ScriptItemUID="Form3" ID="Done">
        <ActionSequence ScriptItemUID="Action9" />
        <PagePartContainer ScriptItemUID="PagePartContainer6" ID="Title">
          <Label ScriptItemUID="Label5" Text="translate(&quot;#LDS#Success&quot;)" />
        </PagePartContainer>
        <PagePartContainer ScriptItemUID="PagePartContainer7" ID="Main">
          <Container ScriptItemUID="Container7" EnableCustomAttributes="true">
            <HtmlAttributes>
              <HtmlAttribute ScriptItemUID="HtmlAttribute3" Name="&quot;class&quot;" Value="&quot;imx-message&quot;" />
            </HtmlAttributes>
            <Label ScriptItemUID="Label6" Text="translate(&quot;#LDS#The changes have been successfully saved.&quot;)" />
          </Container>
          <Container ScriptItemUID="Container11" Layout="'VI_Styles_Container_ButtonBar'">
            <Button ScriptItemUID="Button8" Text="translate(&quot;#LDS#Home&quot;)" Layout="'VI_Styles_Button_LabelOnly'">
              <ServerActionCall ScriptItemUID="ServerActionCall8">
                <Redirect ScriptItemUID="Redirect7" Target="ReturnStartForm" />
              </ServerActionCall>
            </Button>
            <Button ScriptItemUID="Button5" Text="translate(&quot;#LDS#Log off&quot;)">
              <ServerActionCall ScriptItemUID="ServerActionCall5">
                <ActionOnControl ActionType="EndSession" />
              </ServerActionCall>
            </Button>
          </Container>
        </PagePartContainer>
      </Form>
    </Forms>
  </Context>
</WebDesigner>
